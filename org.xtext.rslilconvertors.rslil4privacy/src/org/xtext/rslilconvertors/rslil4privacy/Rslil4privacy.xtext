grammar org.xtext.rslilconvertors.rslil4privacy.Rslil4privacy with org.eclipse.xtext.common.Terminals

generate rslil4privacy "http://www.xtext.org/rslilconvertors/rslil4privacy/Rslil4privacy"

Policy:
	'Package' name = QualifiedName'{'
	importelements += Import*
 	(collection+=Collection | disclosure+=Disclosure | retention+=Retention | usage+=Usage | informative+=Informative)*
 	privateData+=PrivateData*
	recipient+=Recipient*
	service+=Service*
	enforcement+=Enforcement*'};';

QualifiedName:
  ID ('.' ID)*;

Import:
  'import' importedNamespace = QualifiedNameWithWildcard;
  
QualifiedNameWithWildcard:
  QualifiedName '.*'?;
  	
Enforcement:
	'Enforcement' name=ID '{' 
	'Name'enforcementName=STRING ','
	'Description'enforcementDescription=STRING ','
	'Type' enforcementKind=('Action'|'Algorithm'|'Config'|'Process'|'Tool')'};';
	
Service:
	'Service' name=ID '{'
	'Name' servicename=STRING','
	('Description' description=STRING',')?
	('RefersTo PrivateData' reftoPrivateData+=ReftoPrivateData*',')?
	('Service_Part' refertoservice+=ReferToService*',')?'};';
	
Recipient:
	'Recipient' name=ID '{' 
	'Name' recipientname=STRING ','
	'Description' recipientDescription=STRING ','
	('Recipient_Part' partof+=Partof*',')?
 	'Scope' recipientScope=('Internal'|'External'|'Internal/External')','
 	'Type' recipientType=('Individual'|'Organization'|'Individual/Organization')'};';
 		
PrivateData:
   'PrivateData' name=ID '{' 
   'Description' privatedata=STRING ','
   'Type' PrivateDataKind=('PersonalInformation'| 'UsageInformation')',' attribute+=Attribute* '};'; 	
 Attribute:
 	'Attribute' name=STRING 'Description' attributeName=STRING (',')?;

Collection: 
	'Collection' name=ID '{' 
	'Description' collectiondescription=STRING ','
	'Condition' collectioncondition = STRING','
	('RefersTo PrivateData' reftoPrivateData+=ReftoPrivateData*',')?
	('RefersTo Service' refertoservice+=ReferToService*',')?
	('RefersTo Enforcement' refertoEnforcement+=RefertoEnforcement*',')?
	'Modality' modalitykind=('Permitted'|'Obligation'|'Forbidden') '};';
	
Disclosure: 
	'Disclosure' name=ID '{' 
	'Description' didescription=STRING ','
	'Condition' discondition = STRING','
	('RefersTo Recipient' referToRecipient+=ReferToRecipient* ',')?
	('RefersTo Recipient-Source' referToRecipientsource+=ReferToRecipientSource* ',')?
	('RefersTo Recipient-Target' referToRecipienttarget+=ReferToRecipientTarget* ',')?
	('RefersTo PrivateData' reftoPrivateData+=ReftoPrivateData*',')?
	('RefersTo Service' refertoservice+=ReferToService*',')?
	('RefersTo Enforcement' refertoEnforcement+=RefertoEnforcement*',')?
	'Modality' modalitykind=('Permitted'|'Obligation'|'Forbidden') '};';
	
Retention: 
	'Retention' name=ID '{' 
	'Description' retentiondescription=STRING ','
	'Condition' retentioncondition = STRING','
	'Period' period=STRING','
	('RefersTo PrivateData' reftoPrivateData+=ReftoPrivateData*',')?
	('RefersTo Service' refertoservice+=ReferToService*',')?
	('RefersTo Enforcement' refertoEnforcement+=RefertoEnforcement*',')?
	'Modality' modalitykind=('Permitted'|'Obligation'|'Forbidden') '};';
	
Usage:
	'Usage' name=ID '{' 
	'Description' usagedescription=STRING ','
	'Condition' usagecondition = STRING','
	('RefersTo PrivateData' reftoPrivateData+=ReftoPrivateData*',')?
	('RefersTo Service' refertoservice+=ReferToService*',')?
	('RefersTo Enforcement' refertoEnforcement+=RefertoEnforcement*',')?
	'Modality' modalitykind=('Permitted'|'Obligation'|'Forbidden') '};';
	
Informative:
	'Informative' name=ID '{' 
	'Description' infdescription=STRING ','
	'Condition' infcondition = STRING','
	('RefersTo PrivateData' reftoPrivateData+=ReftoPrivateData*',')?
	('RefersTo Service' refertoservice+=ReferToService*',')?
	('RefersTo Enforcement' refertoEnforcement+=RefertoEnforcement*',')?
	'Modality' modalitykind=('Permitted'|'Obligation'|'Forbidden') '};';
	
Partof:
	partof=[Recipient|QualifiedName]('-')?;

ReferToRecipient:
	refertore=[Recipient|QualifiedName]('-')?;
	
ReferToRecipientSource:
	refertore=[Recipient|QualifiedName]('-')?;
	
ReferToRecipientTarget:
	refertore=[Recipient|QualifiedName]('-')?;
	
ReferToService:
	refertose=[Service|QualifiedName] ('-')?;	
		
ReftoPrivateData: 
	refpr=[PrivateData|QualifiedName] ('-')?;
	
RefertoEnforcement:
	refen=[Enforcement|QualifiedName] ('-')?;
